// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Timesheets.DAL;

namespace Timesheets.Migrations
{
    [DbContext(typeof(TimesSheetsContext))]
    partial class TimesSheetsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Timesheets.DAL.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<decimal>("HourCost")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Contracts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            HourCost = 3000m,
                            Name = "Создание сайта",
                            Number = "1/2021"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            HourCost = 3200m,
                            Name = "Разработка учетной программы",
                            Number = "2/2021"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2,
                            HourCost = 3200m,
                            Name = "Создание сайта",
                            Number = "2/2021"
                        });
                });

            modelBuilder.Entity("Timesheets.DAL.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ООО Рога и Копыта"
                        },
                        new
                        {
                            Id = 2,
                            Name = "АО Пивной дворик"
                        });
                });

            modelBuilder.Entity("Timesheets.DAL.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Иванов Иван Иванович"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Петров Петр Петрович"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Сидоров Сидр Сидорович"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Смит Владимир"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Монин Даниил"
                        });
                });

            modelBuilder.Entity("Timesheets.DAL.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ContractId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContractId = 2,
                            Date = new DateTime(2021, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Счет за выполненные работы по договору 2/2021",
                            Total = 192000m
                        });
                });

            modelBuilder.Entity("Timesheets.DAL.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 20,
                            IsCompleted = false,
                            Name = "Создание базы данных "
                        },
                        new
                        {
                            Id = 2,
                            Amount = 30,
                            IsCompleted = false,
                            Name = "Создание макета сайта"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 40,
                            InvoiceId = 1,
                            IsCompleted = true,
                            Name = "Разработка API"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 20,
                            IsCompleted = false,
                            Name = "Подготовка документации к проекту"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 20,
                            IsCompleted = false,
                            Name = "Создание клиентского приложения на React"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 20,
                            InvoiceId = 1,
                            IsCompleted = true,
                            Name = "Создание приложения под Android"
                        });
                });

            modelBuilder.Entity("Timesheets.DAL.Models.TaskExecution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("TaskId")
                        .HasColumnType("integer");

                    b.Property<int>("TimeSpent")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskExecutions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 4,
                            TaskId = 3,
                            TimeSpent = 10
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 5,
                            TaskId = 3,
                            TimeSpent = 20
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 2,
                            TaskId = 3,
                            TimeSpent = 10
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 1,
                            TaskId = 6,
                            TimeSpent = 20
                        });
                });

            modelBuilder.Entity("Timesheets.DAL.Models.Contract", b =>
                {
                    b.HasOne("Timesheets.DAL.Models.Customer", "Customer")
                        .WithMany("Contracts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Timesheets.DAL.Models.Invoice", b =>
                {
                    b.HasOne("Timesheets.DAL.Models.Contract", "Contract")
                        .WithMany("Invoices")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("Timesheets.DAL.Models.Task", b =>
                {
                    b.HasOne("Timesheets.DAL.Models.Invoice", "Invoice")
                        .WithMany("Tasks")
                        .HasForeignKey("InvoiceId");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Timesheets.DAL.Models.TaskExecution", b =>
                {
                    b.HasOne("Timesheets.DAL.Models.Employee", "Employee")
                        .WithMany("TaskExecutions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Timesheets.DAL.Models.Task", "Task")
                        .WithMany("TaskExecutions")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Timesheets.DAL.Models.Contract", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Timesheets.DAL.Models.Customer", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("Timesheets.DAL.Models.Employee", b =>
                {
                    b.Navigation("TaskExecutions");
                });

            modelBuilder.Entity("Timesheets.DAL.Models.Invoice", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Timesheets.DAL.Models.Task", b =>
                {
                    b.Navigation("TaskExecutions");
                });
#pragma warning restore 612, 618
        }
    }
}
